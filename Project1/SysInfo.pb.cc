// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SysInfo.proto

#include "SysInfo.pb.h"

#include <algorithm>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
#include "google/protobuf/generated_message_tctable_impl.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;

inline constexpr RAMResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : totalramingb_{::int64_t{0}},
        usedramingb_{::int64_t{0}},
        totalraminmb_{::int64_t{0}},
        usedraminmb_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR RAMResponse::RAMResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct RAMResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RAMResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RAMResponseDefaultTypeInternal() {}
  union {
    RAMResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RAMResponseDefaultTypeInternal _RAMResponse_default_instance_;

inline constexpr OsResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : isvirtualmachine_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR OsResponse::OsResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct OsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR OsResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~OsResponseDefaultTypeInternal() {}
  union {
    OsResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 OsResponseDefaultTypeInternal _OsResponse_default_instance_;

inline constexpr NetworkAdapterInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : friendly_name_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        adapter_desc_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_address_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ip_mask_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        gateway_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        dhcp_server_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkAdapterInfo::NetworkAdapterInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NetworkAdapterInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkAdapterInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkAdapterInfoDefaultTypeInternal() {}
  union {
    NetworkAdapterInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkAdapterInfoDefaultTypeInternal _NetworkAdapterInfo_default_instance_;
      template <typename>
PROTOBUF_CONSTEXPR Empty::Empty(::_pbi::ConstantInitialized) {}
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;

inline constexpr DiskInfo::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : path_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        totalsize_{::int64_t{0}},
        usedspace_{::int64_t{0}},
        freespace_{::int64_t{0}},
        usedpercent_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DiskInfo::DiskInfo(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DiskInfoDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiskInfoDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiskInfoDefaultTypeInternal() {}
  union {
    DiskInfo _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiskInfoDefaultTypeInternal _DiskInfo_default_instance_;

inline constexpr CPUResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : avgcpuusage_{::int64_t{0}},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR CPUResponse::CPUResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct CPUResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CPUResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~CPUResponseDefaultTypeInternal() {}
  union {
    CPUResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CPUResponseDefaultTypeInternal _CPUResponse_default_instance_;

inline constexpr NetworkResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : networks_adapter_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR NetworkResponse::NetworkResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct NetworkResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR NetworkResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~NetworkResponseDefaultTypeInternal() {}
  union {
    NetworkResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 NetworkResponseDefaultTypeInternal _NetworkResponse_default_instance_;

inline constexpr DiskResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : drives_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR DiskResponse::DiskResponse(::_pbi::ConstantInitialized)
    : _impl_(::_pbi::ConstantInitialized()) {}
struct DiskResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DiskResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~DiskResponseDefaultTypeInternal() {}
  union {
    DiskResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DiskResponseDefaultTypeInternal _DiskResponse_default_instance_;
static ::_pb::Metadata file_level_metadata_SysInfo_2eproto[8];
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_SysInfo_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_SysInfo_2eproto = nullptr;
const ::uint32_t TableStruct_SysInfo_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(
    protodesc_cold) = {
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::Empty, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::OsResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::OsResponse, _impl_.isvirtualmachine_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::NetworkAdapterInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NetworkAdapterInfo, _impl_.friendly_name_),
    PROTOBUF_FIELD_OFFSET(::NetworkAdapterInfo, _impl_.adapter_desc_),
    PROTOBUF_FIELD_OFFSET(::NetworkAdapterInfo, _impl_.ip_address_),
    PROTOBUF_FIELD_OFFSET(::NetworkAdapterInfo, _impl_.ip_mask_),
    PROTOBUF_FIELD_OFFSET(::NetworkAdapterInfo, _impl_.gateway_),
    PROTOBUF_FIELD_OFFSET(::NetworkAdapterInfo, _impl_.dhcp_server_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::NetworkResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::NetworkResponse, _impl_.networks_adapter_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::DiskInfo, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::DiskInfo, _impl_.path_),
    PROTOBUF_FIELD_OFFSET(::DiskInfo, _impl_.totalsize_),
    PROTOBUF_FIELD_OFFSET(::DiskInfo, _impl_.usedspace_),
    PROTOBUF_FIELD_OFFSET(::DiskInfo, _impl_.freespace_),
    PROTOBUF_FIELD_OFFSET(::DiskInfo, _impl_.usedpercent_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::DiskResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::DiskResponse, _impl_.drives_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::RAMResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::RAMResponse, _impl_.totalramingb_),
    PROTOBUF_FIELD_OFFSET(::RAMResponse, _impl_.usedramingb_),
    PROTOBUF_FIELD_OFFSET(::RAMResponse, _impl_.totalraminmb_),
    PROTOBUF_FIELD_OFFSET(::RAMResponse, _impl_.usedraminmb_),
    ~0u,  // no _has_bits_
    PROTOBUF_FIELD_OFFSET(::CPUResponse, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    ~0u,  // no _inlined_string_donated_
    ~0u,  // no _split_
    ~0u,  // no sizeof(Split)
    PROTOBUF_FIELD_OFFSET(::CPUResponse, _impl_.avgcpuusage_),
};

static const ::_pbi::MigrationSchema
    schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::Empty)},
        {8, -1, -1, sizeof(::OsResponse)},
        {17, -1, -1, sizeof(::NetworkAdapterInfo)},
        {31, -1, -1, sizeof(::NetworkResponse)},
        {40, -1, -1, sizeof(::DiskInfo)},
        {53, -1, -1, sizeof(::DiskResponse)},
        {62, -1, -1, sizeof(::RAMResponse)},
        {74, -1, -1, sizeof(::CPUResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
    &::_Empty_default_instance_._instance,
    &::_OsResponse_default_instance_._instance,
    &::_NetworkAdapterInfo_default_instance_._instance,
    &::_NetworkResponse_default_instance_._instance,
    &::_DiskInfo_default_instance_._instance,
    &::_DiskResponse_default_instance_._instance,
    &::_RAMResponse_default_instance_._instance,
    &::_CPUResponse_default_instance_._instance,
};
const char descriptor_table_protodef_SysInfo_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
    "\n\rSysInfo.proto\032\033google/protobuf/empty.p"
    "roto\"\007\n\005Empty\"&\n\nOsResponse\022\030\n\020isVirtual"
    "Machine\030\001 \001(\t\"\214\001\n\022NetworkAdapterInfo\022\025\n\r"
    "friendly_name\030\001 \001(\t\022\024\n\014Adapter_Desc\030\002 \001("
    "\t\022\022\n\nip_address\030\003 \001(\t\022\017\n\007ip_mask\030\004 \001(\t\022\017"
    "\n\007gateway\030\005 \001(\t\022\023\n\013dhcp_server\030\006 \001(\t\"@\n\017"
    "NetworkResponse\022-\n\020networks_adapter\030\001 \003("
    "\0132\023.NetworkAdapterInfo\"f\n\010DiskInfo\022\014\n\004pa"
    "th\030\001 \001(\t\022\021\n\ttotalsize\030\002 \001(\003\022\021\n\tusedspace"
    "\030\003 \001(\003\022\021\n\tfreespace\030\004 \001(\003\022\023\n\013usedpercent"
    "\030\005 \001(\003\")\n\014DiskResponse\022\031\n\006drives\030\001 \003(\0132\t"
    ".DiskInfo\"c\n\013RAMResponse\022\024\n\014totalRAMinGB"
    "\030\001 \001(\003\022\023\n\013usedRAMinGB\030\002 \001(\003\022\024\n\014totalRAMi"
    "nMB\030\003 \001(\003\022\023\n\013usedRAMinMB\030\004 \001(\003\"\"\n\013CPURes"
    "ponse\022\023\n\013avgCPUusage\030\001 \001(\0032\336\001\n\nSystemInf"
    "o\022$\n\nGetRAMinfo\022\006.Empty\032\014.RAMResponse\"\000\022"
    "+\n\021GetCPUutilization\022\006.Empty\032\014.CPURespon"
    "se\"\000\022\'\n\014GetDiskUsage\022\006.Empty\032\r.DiskRespo"
    "nse\"\000\0220\n\022GetNetworkAdapters\022\006.Empty\032\020.Ne"
    "tworkResponse\"\000\022\"\n\tGetOsType\022\006.Empty\032\013.O"
    "sResponse\"\000b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_SysInfo_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2fempty_2eproto,
};
static ::absl::once_flag descriptor_table_SysInfo_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_SysInfo_2eproto = {
    false,
    false,
    819,
    descriptor_table_protodef_SysInfo_2eproto,
    "SysInfo.proto",
    &descriptor_table_SysInfo_2eproto_once,
    descriptor_table_SysInfo_2eproto_deps,
    1,
    8,
    schemas,
    file_default_instances,
    TableStruct_SysInfo_2eproto::offsets,
    file_level_metadata_SysInfo_2eproto,
    file_level_enum_descriptors_SysInfo_2eproto,
    file_level_service_descriptors_SysInfo_2eproto,
};

// This function exists to be marked as weak.
// It can significantly speed up compilation by breaking up LLVM's SCC
// in the .pb.cc translation units. Large translation units see a
// reduction of more than 35% of walltime for optimized builds. Without
// the weak attribute all the messages in the file, including all the
// vtables and everything they use become part of the same SCC through
// a cycle like:
// GetMetadata -> descriptor table -> default instances ->
//   vtables -> GetMetadata
// By adding a weak function here we break the connection from the
// individual vtables back into the descriptor table.
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_SysInfo_2eproto_getter() {
  return &descriptor_table_SysInfo_2eproto;
}
// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2
static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_SysInfo_2eproto(&descriptor_table_SysInfo_2eproto);
// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::google::protobuf::Arena* arena)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  // @@protoc_insertion_point(arena_constructor:Empty)
}
Empty::Empty(
    ::google::protobuf::Arena* arena,
    const Empty& from)
    : ::google::protobuf::internal::ZeroFieldsBase(arena) {
  Empty* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);

  // @@protoc_insertion_point(copy_constructor:Empty)
}









::google::protobuf::Metadata Empty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SysInfo_2eproto_getter, &descriptor_table_SysInfo_2eproto_once,
      file_level_metadata_SysInfo_2eproto[0]);
}
// ===================================================================

class OsResponse::_Internal {
 public:
};

OsResponse::OsResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:OsResponse)
}
inline PROTOBUF_NDEBUG_INLINE OsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : isvirtualmachine_(arena, from.isvirtualmachine_),
        _cached_size_{0} {}

OsResponse::OsResponse(
    ::google::protobuf::Arena* arena,
    const OsResponse& from)
    : ::google::protobuf::Message(arena) {
  OsResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:OsResponse)
}
inline PROTOBUF_NDEBUG_INLINE OsResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : isvirtualmachine_(arena),
        _cached_size_{0} {}

inline void OsResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
OsResponse::~OsResponse() {
  // @@protoc_insertion_point(destructor:OsResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void OsResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.isvirtualmachine_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void OsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:OsResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.isvirtualmachine_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* OsResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 35, 2> OsResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_OsResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // string isVirtualMachine = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(OsResponse, _impl_.isvirtualmachine_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string isVirtualMachine = 1;
    {PROTOBUF_FIELD_OFFSET(OsResponse, _impl_.isvirtualmachine_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\12\20\0\0\0\0\0\0"
    "OsResponse"
    "isVirtualMachine"
  }},
};

::uint8_t* OsResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:OsResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string isVirtualMachine = 1;
  if (!this->_internal_isvirtualmachine().empty()) {
    const std::string& _s = this->_internal_isvirtualmachine();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "OsResponse.isVirtualMachine");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:OsResponse)
  return target;
}

::size_t OsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:OsResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string isVirtualMachine = 1;
  if (!this->_internal_isvirtualmachine().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_isvirtualmachine());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData OsResponse::_class_data_ = {
    OsResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* OsResponse::GetClassData() const {
  return &_class_data_;
}

void OsResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<OsResponse*>(&to_msg);
  auto& from = static_cast<const OsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:OsResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_isvirtualmachine().empty()) {
    _this->_internal_set_isvirtualmachine(from._internal_isvirtualmachine());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void OsResponse::CopyFrom(const OsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:OsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool OsResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* OsResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void OsResponse::InternalSwap(OsResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.isvirtualmachine_, &other->_impl_.isvirtualmachine_, arena);
}

::google::protobuf::Metadata OsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SysInfo_2eproto_getter, &descriptor_table_SysInfo_2eproto_once,
      file_level_metadata_SysInfo_2eproto[1]);
}
// ===================================================================

class NetworkAdapterInfo::_Internal {
 public:
};

NetworkAdapterInfo::NetworkAdapterInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetworkAdapterInfo)
}
inline PROTOBUF_NDEBUG_INLINE NetworkAdapterInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : friendly_name_(arena, from.friendly_name_),
        adapter_desc_(arena, from.adapter_desc_),
        ip_address_(arena, from.ip_address_),
        ip_mask_(arena, from.ip_mask_),
        gateway_(arena, from.gateway_),
        dhcp_server_(arena, from.dhcp_server_),
        _cached_size_{0} {}

NetworkAdapterInfo::NetworkAdapterInfo(
    ::google::protobuf::Arena* arena,
    const NetworkAdapterInfo& from)
    : ::google::protobuf::Message(arena) {
  NetworkAdapterInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:NetworkAdapterInfo)
}
inline PROTOBUF_NDEBUG_INLINE NetworkAdapterInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : friendly_name_(arena),
        adapter_desc_(arena),
        ip_address_(arena),
        ip_mask_(arena),
        gateway_(arena),
        dhcp_server_(arena),
        _cached_size_{0} {}

inline void NetworkAdapterInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NetworkAdapterInfo::~NetworkAdapterInfo() {
  // @@protoc_insertion_point(destructor:NetworkAdapterInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NetworkAdapterInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.friendly_name_.Destroy();
  _impl_.adapter_desc_.Destroy();
  _impl_.ip_address_.Destroy();
  _impl_.ip_mask_.Destroy();
  _impl_.gateway_.Destroy();
  _impl_.dhcp_server_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NetworkAdapterInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:NetworkAdapterInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.friendly_name_.ClearToEmpty();
  _impl_.adapter_desc_.ClearToEmpty();
  _impl_.ip_address_.ClearToEmpty();
  _impl_.ip_mask_.ClearToEmpty();
  _impl_.gateway_.ClearToEmpty();
  _impl_.dhcp_server_.ClearToEmpty();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NetworkAdapterInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 87, 2> NetworkAdapterInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_NetworkAdapterInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string friendly_name = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.friendly_name_)}},
    // string Adapter_Desc = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.adapter_desc_)}},
    // string ip_address = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.ip_address_)}},
    // string ip_mask = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.ip_mask_)}},
    // string gateway = 5;
    {::_pbi::TcParser::FastUS1,
     {42, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.gateway_)}},
    // string dhcp_server = 6;
    {::_pbi::TcParser::FastUS1,
     {50, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.dhcp_server_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string friendly_name = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.friendly_name_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string Adapter_Desc = 2;
    {PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.adapter_desc_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip_address = 3;
    {PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.ip_address_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string ip_mask = 4;
    {PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.ip_mask_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string gateway = 5;
    {PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.gateway_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string dhcp_server = 6;
    {PROTOBUF_FIELD_OFFSET(NetworkAdapterInfo, _impl_.dhcp_server_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\22\15\14\12\7\7\13\0"
    "NetworkAdapterInfo"
    "friendly_name"
    "Adapter_Desc"
    "ip_address"
    "ip_mask"
    "gateway"
    "dhcp_server"
  }},
};

::uint8_t* NetworkAdapterInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetworkAdapterInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string friendly_name = 1;
  if (!this->_internal_friendly_name().empty()) {
    const std::string& _s = this->_internal_friendly_name();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NetworkAdapterInfo.friendly_name");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // string Adapter_Desc = 2;
  if (!this->_internal_adapter_desc().empty()) {
    const std::string& _s = this->_internal_adapter_desc();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NetworkAdapterInfo.Adapter_Desc");
    target = stream->WriteStringMaybeAliased(2, _s, target);
  }

  // string ip_address = 3;
  if (!this->_internal_ip_address().empty()) {
    const std::string& _s = this->_internal_ip_address();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NetworkAdapterInfo.ip_address");
    target = stream->WriteStringMaybeAliased(3, _s, target);
  }

  // string ip_mask = 4;
  if (!this->_internal_ip_mask().empty()) {
    const std::string& _s = this->_internal_ip_mask();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NetworkAdapterInfo.ip_mask");
    target = stream->WriteStringMaybeAliased(4, _s, target);
  }

  // string gateway = 5;
  if (!this->_internal_gateway().empty()) {
    const std::string& _s = this->_internal_gateway();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NetworkAdapterInfo.gateway");
    target = stream->WriteStringMaybeAliased(5, _s, target);
  }

  // string dhcp_server = 6;
  if (!this->_internal_dhcp_server().empty()) {
    const std::string& _s = this->_internal_dhcp_server();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "NetworkAdapterInfo.dhcp_server");
    target = stream->WriteStringMaybeAliased(6, _s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetworkAdapterInfo)
  return target;
}

::size_t NetworkAdapterInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetworkAdapterInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string friendly_name = 1;
  if (!this->_internal_friendly_name().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_friendly_name());
  }

  // string Adapter_Desc = 2;
  if (!this->_internal_adapter_desc().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_adapter_desc());
  }

  // string ip_address = 3;
  if (!this->_internal_ip_address().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip_address());
  }

  // string ip_mask = 4;
  if (!this->_internal_ip_mask().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_ip_mask());
  }

  // string gateway = 5;
  if (!this->_internal_gateway().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_gateway());
  }

  // string dhcp_server = 6;
  if (!this->_internal_dhcp_server().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_dhcp_server());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NetworkAdapterInfo::_class_data_ = {
    NetworkAdapterInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NetworkAdapterInfo::GetClassData() const {
  return &_class_data_;
}

void NetworkAdapterInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NetworkAdapterInfo*>(&to_msg);
  auto& from = static_cast<const NetworkAdapterInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetworkAdapterInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_friendly_name().empty()) {
    _this->_internal_set_friendly_name(from._internal_friendly_name());
  }
  if (!from._internal_adapter_desc().empty()) {
    _this->_internal_set_adapter_desc(from._internal_adapter_desc());
  }
  if (!from._internal_ip_address().empty()) {
    _this->_internal_set_ip_address(from._internal_ip_address());
  }
  if (!from._internal_ip_mask().empty()) {
    _this->_internal_set_ip_mask(from._internal_ip_mask());
  }
  if (!from._internal_gateway().empty()) {
    _this->_internal_set_gateway(from._internal_gateway());
  }
  if (!from._internal_dhcp_server().empty()) {
    _this->_internal_set_dhcp_server(from._internal_dhcp_server());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkAdapterInfo::CopyFrom(const NetworkAdapterInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetworkAdapterInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NetworkAdapterInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NetworkAdapterInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NetworkAdapterInfo::InternalSwap(NetworkAdapterInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.friendly_name_, &other->_impl_.friendly_name_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.adapter_desc_, &other->_impl_.adapter_desc_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_address_, &other->_impl_.ip_address_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ip_mask_, &other->_impl_.ip_mask_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.gateway_, &other->_impl_.gateway_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.dhcp_server_, &other->_impl_.dhcp_server_, arena);
}

::google::protobuf::Metadata NetworkAdapterInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SysInfo_2eproto_getter, &descriptor_table_SysInfo_2eproto_once,
      file_level_metadata_SysInfo_2eproto[2]);
}
// ===================================================================

class NetworkResponse::_Internal {
 public:
};

NetworkResponse::NetworkResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:NetworkResponse)
}
inline PROTOBUF_NDEBUG_INLINE NetworkResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : networks_adapter_{visibility, arena, from.networks_adapter_},
        _cached_size_{0} {}

NetworkResponse::NetworkResponse(
    ::google::protobuf::Arena* arena,
    const NetworkResponse& from)
    : ::google::protobuf::Message(arena) {
  NetworkResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:NetworkResponse)
}
inline PROTOBUF_NDEBUG_INLINE NetworkResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : networks_adapter_{visibility, arena},
        _cached_size_{0} {}

inline void NetworkResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
NetworkResponse::~NetworkResponse() {
  // @@protoc_insertion_point(destructor:NetworkResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void NetworkResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void NetworkResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:NetworkResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.networks_adapter_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* NetworkResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> NetworkResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_NetworkResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .NetworkAdapterInfo networks_adapter = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(NetworkResponse, _impl_.networks_adapter_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .NetworkAdapterInfo networks_adapter = 1;
    {PROTOBUF_FIELD_OFFSET(NetworkResponse, _impl_.networks_adapter_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::NetworkAdapterInfo>()},
  }}, {{
  }},
};

::uint8_t* NetworkResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:NetworkResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .NetworkAdapterInfo networks_adapter = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_networks_adapter_size()); i < n; i++) {
    const auto& repfield = this->_internal_networks_adapter().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:NetworkResponse)
  return target;
}

::size_t NetworkResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:NetworkResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .NetworkAdapterInfo networks_adapter = 1;
  total_size += 1UL * this->_internal_networks_adapter_size();
  for (const auto& msg : this->_internal_networks_adapter()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData NetworkResponse::_class_data_ = {
    NetworkResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* NetworkResponse::GetClassData() const {
  return &_class_data_;
}

void NetworkResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<NetworkResponse*>(&to_msg);
  auto& from = static_cast<const NetworkResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:NetworkResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_networks_adapter()->MergeFrom(
      from._internal_networks_adapter());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void NetworkResponse::CopyFrom(const NetworkResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:NetworkResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool NetworkResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* NetworkResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void NetworkResponse::InternalSwap(NetworkResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.networks_adapter_.InternalSwap(&other->_impl_.networks_adapter_);
}

::google::protobuf::Metadata NetworkResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SysInfo_2eproto_getter, &descriptor_table_SysInfo_2eproto_once,
      file_level_metadata_SysInfo_2eproto[3]);
}
// ===================================================================

class DiskInfo::_Internal {
 public:
};

DiskInfo::DiskInfo(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DiskInfo)
}
inline PROTOBUF_NDEBUG_INLINE DiskInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : path_(arena, from.path_),
        _cached_size_{0} {}

DiskInfo::DiskInfo(
    ::google::protobuf::Arena* arena,
    const DiskInfo& from)
    : ::google::protobuf::Message(arena) {
  DiskInfo* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, totalsize_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, totalsize_),
           offsetof(Impl_, usedpercent_) -
               offsetof(Impl_, totalsize_) +
               sizeof(Impl_::usedpercent_));

  // @@protoc_insertion_point(copy_constructor:DiskInfo)
}
inline PROTOBUF_NDEBUG_INLINE DiskInfo::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : path_(arena),
        _cached_size_{0} {}

inline void DiskInfo::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, totalsize_),
           0,
           offsetof(Impl_, usedpercent_) -
               offsetof(Impl_, totalsize_) +
               sizeof(Impl_::usedpercent_));
}
DiskInfo::~DiskInfo() {
  // @@protoc_insertion_point(destructor:DiskInfo)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DiskInfo::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.path_.Destroy();
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DiskInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:DiskInfo)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.path_.ClearToEmpty();
  ::memset(&_impl_.totalsize_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.usedpercent_) -
      reinterpret_cast<char*>(&_impl_.totalsize_)) + sizeof(_impl_.usedpercent_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DiskInfo::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 21, 2> DiskInfo::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_DiskInfo_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string path = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.path_)}},
    // int64 totalsize = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DiskInfo, _impl_.totalsize_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.totalsize_)}},
    // int64 usedspace = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DiskInfo, _impl_.usedspace_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.usedspace_)}},
    // int64 freespace = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DiskInfo, _impl_.freespace_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.freespace_)}},
    // int64 usedpercent = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(DiskInfo, _impl_.usedpercent_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.usedpercent_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string path = 1;
    {PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.path_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 totalsize = 2;
    {PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.totalsize_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 usedspace = 3;
    {PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.usedspace_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 freespace = 4;
    {PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.freespace_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 usedpercent = 5;
    {PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.usedpercent_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\10\4\0\0\0\0\0\0"
    "DiskInfo"
    "path"
  }},
};

::uint8_t* DiskInfo::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DiskInfo)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    const std::string& _s = this->_internal_path();
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "DiskInfo.path");
    target = stream->WriteStringMaybeAliased(1, _s, target);
  }

  // int64 totalsize = 2;
  if (this->_internal_totalsize() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_totalsize(), target);
  }

  // int64 usedspace = 3;
  if (this->_internal_usedspace() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_usedspace(), target);
  }

  // int64 freespace = 4;
  if (this->_internal_freespace() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_freespace(), target);
  }

  // int64 usedpercent = 5;
  if (this->_internal_usedpercent() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<5>(
            stream, this->_internal_usedpercent(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DiskInfo)
  return target;
}

::size_t DiskInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DiskInfo)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string path = 1;
  if (!this->_internal_path().empty()) {
    total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                    this->_internal_path());
  }

  // int64 totalsize = 2;
  if (this->_internal_totalsize() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_totalsize());
  }

  // int64 usedspace = 3;
  if (this->_internal_usedspace() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_usedspace());
  }

  // int64 freespace = 4;
  if (this->_internal_freespace() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_freespace());
  }

  // int64 usedpercent = 5;
  if (this->_internal_usedpercent() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_usedpercent());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DiskInfo::_class_data_ = {
    DiskInfo::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DiskInfo::GetClassData() const {
  return &_class_data_;
}

void DiskInfo::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DiskInfo*>(&to_msg);
  auto& from = static_cast<const DiskInfo&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DiskInfo)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_path().empty()) {
    _this->_internal_set_path(from._internal_path());
  }
  if (from._internal_totalsize() != 0) {
    _this->_internal_set_totalsize(from._internal_totalsize());
  }
  if (from._internal_usedspace() != 0) {
    _this->_internal_set_usedspace(from._internal_usedspace());
  }
  if (from._internal_freespace() != 0) {
    _this->_internal_set_freespace(from._internal_freespace());
  }
  if (from._internal_usedpercent() != 0) {
    _this->_internal_set_usedpercent(from._internal_usedpercent());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DiskInfo::CopyFrom(const DiskInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DiskInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DiskInfo::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DiskInfo::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DiskInfo::InternalSwap(DiskInfo* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.path_, &other->_impl_.path_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.usedpercent_)
      + sizeof(DiskInfo::_impl_.usedpercent_)
      - PROTOBUF_FIELD_OFFSET(DiskInfo, _impl_.totalsize_)>(
          reinterpret_cast<char*>(&_impl_.totalsize_),
          reinterpret_cast<char*>(&other->_impl_.totalsize_));
}

::google::protobuf::Metadata DiskInfo::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SysInfo_2eproto_getter, &descriptor_table_SysInfo_2eproto_once,
      file_level_metadata_SysInfo_2eproto[4]);
}
// ===================================================================

class DiskResponse::_Internal {
 public:
};

DiskResponse::DiskResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:DiskResponse)
}
inline PROTOBUF_NDEBUG_INLINE DiskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from)
      : drives_{visibility, arena, from.drives_},
        _cached_size_{0} {}

DiskResponse::DiskResponse(
    ::google::protobuf::Arena* arena,
    const DiskResponse& from)
    : ::google::protobuf::Message(arena) {
  DiskResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_);

  // @@protoc_insertion_point(copy_constructor:DiskResponse)
}
inline PROTOBUF_NDEBUG_INLINE DiskResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : drives_{visibility, arena},
        _cached_size_{0} {}

inline void DiskResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
DiskResponse::~DiskResponse() {
  // @@protoc_insertion_point(destructor:DiskResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void DiskResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void DiskResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DiskResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.drives_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* DiskResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> DiskResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    &_DiskResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // repeated .DiskInfo drives = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(DiskResponse, _impl_.drives_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .DiskInfo drives = 1;
    {PROTOBUF_FIELD_OFFSET(DiskResponse, _impl_.drives_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::DiskInfo>()},
  }}, {{
  }},
};

::uint8_t* DiskResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DiskResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .DiskInfo drives = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_drives_size()); i < n; i++) {
    const auto& repfield = this->_internal_drives().Get(i);
    target = ::google::protobuf::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DiskResponse)
  return target;
}

::size_t DiskResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DiskResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .DiskInfo drives = 1;
  total_size += 1UL * this->_internal_drives_size();
  for (const auto& msg : this->_internal_drives()) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData DiskResponse::_class_data_ = {
    DiskResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* DiskResponse::GetClassData() const {
  return &_class_data_;
}

void DiskResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<DiskResponse*>(&to_msg);
  auto& from = static_cast<const DiskResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DiskResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_drives()->MergeFrom(
      from._internal_drives());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void DiskResponse::CopyFrom(const DiskResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DiskResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool DiskResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* DiskResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void DiskResponse::InternalSwap(DiskResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.drives_.InternalSwap(&other->_impl_.drives_);
}

::google::protobuf::Metadata DiskResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SysInfo_2eproto_getter, &descriptor_table_SysInfo_2eproto_once,
      file_level_metadata_SysInfo_2eproto[5]);
}
// ===================================================================

class RAMResponse::_Internal {
 public:
};

RAMResponse::RAMResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:RAMResponse)
}
RAMResponse::RAMResponse(
    ::google::protobuf::Arena* arena, const RAMResponse& from)
    : RAMResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE RAMResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void RAMResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, totalramingb_),
           0,
           offsetof(Impl_, usedraminmb_) -
               offsetof(Impl_, totalramingb_) +
               sizeof(Impl_::usedraminmb_));
}
RAMResponse::~RAMResponse() {
  // @@protoc_insertion_point(destructor:RAMResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void RAMResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void RAMResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:RAMResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.totalramingb_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.usedraminmb_) -
      reinterpret_cast<char*>(&_impl_.totalramingb_)) + sizeof(_impl_.usedraminmb_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* RAMResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 0, 2> RAMResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_RAMResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 usedRAMinMB = 4;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RAMResponse, _impl_.usedraminmb_), 63>(),
     {32, 63, 0, PROTOBUF_FIELD_OFFSET(RAMResponse, _impl_.usedraminmb_)}},
    // int64 totalRAMinGB = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RAMResponse, _impl_.totalramingb_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(RAMResponse, _impl_.totalramingb_)}},
    // int64 usedRAMinGB = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RAMResponse, _impl_.usedramingb_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(RAMResponse, _impl_.usedramingb_)}},
    // int64 totalRAMinMB = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RAMResponse, _impl_.totalraminmb_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(RAMResponse, _impl_.totalraminmb_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 totalRAMinGB = 1;
    {PROTOBUF_FIELD_OFFSET(RAMResponse, _impl_.totalramingb_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 usedRAMinGB = 2;
    {PROTOBUF_FIELD_OFFSET(RAMResponse, _impl_.usedramingb_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 totalRAMinMB = 3;
    {PROTOBUF_FIELD_OFFSET(RAMResponse, _impl_.totalraminmb_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
    // int64 usedRAMinMB = 4;
    {PROTOBUF_FIELD_OFFSET(RAMResponse, _impl_.usedraminmb_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* RAMResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:RAMResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 totalRAMinGB = 1;
  if (this->_internal_totalramingb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_totalramingb(), target);
  }

  // int64 usedRAMinGB = 2;
  if (this->_internal_usedramingb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<2>(
            stream, this->_internal_usedramingb(), target);
  }

  // int64 totalRAMinMB = 3;
  if (this->_internal_totalraminmb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<3>(
            stream, this->_internal_totalraminmb(), target);
  }

  // int64 usedRAMinMB = 4;
  if (this->_internal_usedraminmb() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<4>(
            stream, this->_internal_usedraminmb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:RAMResponse)
  return target;
}

::size_t RAMResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:RAMResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 totalRAMinGB = 1;
  if (this->_internal_totalramingb() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_totalramingb());
  }

  // int64 usedRAMinGB = 2;
  if (this->_internal_usedramingb() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_usedramingb());
  }

  // int64 totalRAMinMB = 3;
  if (this->_internal_totalraminmb() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_totalraminmb());
  }

  // int64 usedRAMinMB = 4;
  if (this->_internal_usedraminmb() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_usedraminmb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData RAMResponse::_class_data_ = {
    RAMResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* RAMResponse::GetClassData() const {
  return &_class_data_;
}

void RAMResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<RAMResponse*>(&to_msg);
  auto& from = static_cast<const RAMResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:RAMResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_totalramingb() != 0) {
    _this->_internal_set_totalramingb(from._internal_totalramingb());
  }
  if (from._internal_usedramingb() != 0) {
    _this->_internal_set_usedramingb(from._internal_usedramingb());
  }
  if (from._internal_totalraminmb() != 0) {
    _this->_internal_set_totalraminmb(from._internal_totalraminmb());
  }
  if (from._internal_usedraminmb() != 0) {
    _this->_internal_set_usedraminmb(from._internal_usedraminmb());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RAMResponse::CopyFrom(const RAMResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:RAMResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool RAMResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* RAMResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void RAMResponse::InternalSwap(RAMResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RAMResponse, _impl_.usedraminmb_)
      + sizeof(RAMResponse::_impl_.usedraminmb_)
      - PROTOBUF_FIELD_OFFSET(RAMResponse, _impl_.totalramingb_)>(
          reinterpret_cast<char*>(&_impl_.totalramingb_),
          reinterpret_cast<char*>(&other->_impl_.totalramingb_));
}

::google::protobuf::Metadata RAMResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SysInfo_2eproto_getter, &descriptor_table_SysInfo_2eproto_once,
      file_level_metadata_SysInfo_2eproto[6]);
}
// ===================================================================

class CPUResponse::_Internal {
 public:
};

CPUResponse::CPUResponse(::google::protobuf::Arena* arena)
    : ::google::protobuf::Message(arena) {
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:CPUResponse)
}
CPUResponse::CPUResponse(
    ::google::protobuf::Arena* arena, const CPUResponse& from)
    : CPUResponse(arena) {
  MergeFrom(from);
}
inline PROTOBUF_NDEBUG_INLINE CPUResponse::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0} {}

inline void CPUResponse::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.avgcpuusage_ = {};
}
CPUResponse::~CPUResponse() {
  // @@protoc_insertion_point(destructor:CPUResponse)
  _internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  SharedDtor();
}
inline void CPUResponse::SharedDtor() {
  ABSL_DCHECK(GetArena() == nullptr);
  _impl_.~Impl_();
}

PROTOBUF_NOINLINE void CPUResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:CPUResponse)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.avgcpuusage_ = ::int64_t{0};
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

const char* CPUResponse::_InternalParse(
    const char* ptr, ::_pbi::ParseContext* ctx) {
  ptr = ::_pbi::TcParser::ParseLoop(this, ptr, ctx, &_table_.header);
  return ptr;
}


PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2> CPUResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    &_CPUResponse_default_instance_._instance,
    ::_pbi::TcParser::GenericFallback,  // fallback
  }, {{
    // int64 avgCPUusage = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(CPUResponse, _impl_.avgcpuusage_), 63>(),
     {8, 63, 0, PROTOBUF_FIELD_OFFSET(CPUResponse, _impl_.avgcpuusage_)}},
  }}, {{
    65535, 65535
  }}, {{
    // int64 avgCPUusage = 1;
    {PROTOBUF_FIELD_OFFSET(CPUResponse, _impl_.avgcpuusage_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
  }},
};

::uint8_t* CPUResponse::_InternalSerialize(
    ::uint8_t* target,
    ::google::protobuf::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CPUResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // int64 avgCPUusage = 1;
  if (this->_internal_avgcpuusage() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::
        WriteInt64ToArrayWithField<1>(
            stream, this->_internal_avgcpuusage(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CPUResponse)
  return target;
}

::size_t CPUResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CPUResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int64 avgCPUusage = 1;
  if (this->_internal_avgcpuusage() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
        this->_internal_avgcpuusage());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::google::protobuf::Message::ClassData CPUResponse::_class_data_ = {
    CPUResponse::MergeImpl,
    nullptr,  // OnDemandRegisterArenaDtor
};
const ::google::protobuf::Message::ClassData* CPUResponse::GetClassData() const {
  return &_class_data_;
}

void CPUResponse::MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg) {
  auto* const _this = static_cast<CPUResponse*>(&to_msg);
  auto& from = static_cast<const CPUResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:CPUResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_avgcpuusage() != 0) {
    _this->_internal_set_avgcpuusage(from._internal_avgcpuusage());
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void CPUResponse::CopyFrom(const CPUResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CPUResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

PROTOBUF_NOINLINE bool CPUResponse::IsInitialized() const {
  return true;
}

::_pbi::CachedSize* CPUResponse::AccessCachedSize() const {
  return &_impl_._cached_size_;
}
void CPUResponse::InternalSwap(CPUResponse* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
        swap(_impl_.avgcpuusage_, other->_impl_.avgcpuusage_);
}

::google::protobuf::Metadata CPUResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_SysInfo_2eproto_getter, &descriptor_table_SysInfo_2eproto_once,
      file_level_metadata_SysInfo_2eproto[7]);
}
// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
#include "google/protobuf/port_undef.inc"
